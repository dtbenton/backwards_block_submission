perm_func = function(s1,s2,p1,p2){ # s=condition; p=Experiment
set.seed(2018)                         # do NOT forget to put the arguments in quote.
b = rep(0,4000)
for(i in 1:4000){
x = sample(D_tall$measure)
dif = x[D_tall$condition==s1 & D_tall$Exp==p1] -
x[D_tall$condition==s2 & D_tall$Exp==p2]
b[i] = mean(dif)
}
# compute the actual difference beween BB pre and BB post
bb_diff = mean(D_tall$measure[D_tall$condition==s1 & D_tall$Exp==p1]-
D_tall$measure[D_tall$condition==s2 & D_tall$Exp==p2])
# 1- and 2-tailed p-values
c(bb_diff, sum(abs(b) > bb_diff)/4000, sum(abs(b) < bb_diff)/4000,
sum(b > bb_diff)/4000, sum(b < bb_diff)/4000)
}
# BOOTSTRAP FUNCTION
# Single-factor bootstrap function
global_boot = function(s,p,o){
set.seed(2018)
boot_fit = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$measure[d$condition==s & d$Exp==p],
data=D_tall)
return(dif.1)
}
boot_obj = boot(D_tall, boot_fit, R=4000)
c(boot_obj$t0, boot_obj$t0  + 1.96*-sd(boot_obj$t),
boot_obj$t0  + 1.96*sd(boot_obj$t))
}
# BOOTSTRAP FUNCTION
# Condition-difference bootstrap function
global_boot_2 = function(s1,s2,p1,p2){
set.seed(2018)
boot_fit = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$measure[d$condition==s1 & d$Exp==p1],
data=D_tall) - mean(d$measure[d$condition==s2 & d$Exp==p2],
data=D_tall)
return(dif.1)
}
boot_obj = boot(D_tall, boot_fit, R=4000)
c(boot_obj$t0, boot_obj$t0  + 1.96*-sd(boot_obj$t),
boot_obj$t0  + 1.96*sd(boot_obj$t))
}
onevstwosub = subset(D_tall, ! Exp %in% c(3))
onevstwosub = subset(onevstwosub, ! condition %in% c("modifiedRW"))
onevstwosub_lme = lme(measure~(condition+Exp)^2,
random=~1|ID,
data=onevstwosub)
onevstwosub_lme = lme(measure~Exp,
random=~1|ID,
data=onevstwosub)
anova.lme(onevstwosub_lme)
perm_func("Bayesian","Bayesian","Exp1","Exp2")
fix(D_tall)
onevsthreesub = subset(D_tall, ! Exp %in% c(2))
onevsthreesub = subset(onevsthreesub, ! condition %in% c("modifiedRW"))
onevsthreesub_lme = lme(measure~Exp,
random=~1|ID,
data=onevsthreesub)
perm_func("Bayesian","Bayesian","Exp1","Exp3")
anova.lme(onevsthreesub_lme)
fix(D_tall)
mean(D_tall$measure)
mean(D_tall$measure[D_tall$condition=="Bayesian"])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp==1])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp=="1"])
fix(D_tall)
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp=="Exp1"])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp=="Exp2"])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp=="Exp3"])
onevsthreesub = subset(D_tall, ! Exp %in% c("Exp3"))
onevsthreesub = subset(onevsthreesub, ! condition %in% c("modifiedRW"))
# creating a smaller
# data set by removing the
# BB and IS conditions.
# 1C condition
onevsthreesub_lme = lme(measure~Exp,
random=~1|ID,
data=onevsthreesub)
# omnibus ANOVA
anova.lme(onevsthreesub_lme)
fix(D_tall)
onevsthreesub_lme = lme(measure~Exp,
random=~1|ID,
data=onevsthreesub)
fix(onevstwosub)
fix(onevstwosub)
onevstwosub = subset(D_tall, ! Exp %in% c("Exp3"))
fix(onevstwosub)
fix(onevstwosub)
onevstwosub = subset(onevstwosub, ! condition %in% c("modifiedRW"))
fix(onevstwosub)
onevstwosub_lme = lme(measure~Exp,
random=~1|ID,
data=onevstwosub)
anova.lme(onevstwosub_lme)
# omnibus ANOVA
anova.lme(onevstwosub_lme)
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp=="Exp1"])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp=="Exp2"])
summary(onevstwosub_lme)
perm_func("Bayesian","Bayesian","Exp1","Exp2")
# Experiment 1 vs Experiment 3 BB comparison #
onevsthreesub = subset(D_tall, ! Exp %in% c("Exp3"))
onevsthreesub = subset(onevsthreesub, ! condition %in% c("modifiedRW"))
onevsthreesub_lme = lme(measure~Exp,
random=~1|ID,
data=onevsthreesub)
summary(onevsthreesub_lme)
# Experiment 1 vs Experiment 3 BB comparison #
onevsthreesub = subset(D_tall, ! Exp %in% c("Exp2"))
onevsthreesub = subset(onevsthreesub, ! condition %in% c("modifiedRW"))
onevsthreesub_lme = lme(measure~Exp,
random=~1|ID,
data=onevsthreesub)
# omnibus ANOVA
summary(onevsthreesub_lme)
anova.lme(onevsthreesub_lme)
# Experiment 1 vs Experiment 3 BB comparison #
onevsthreesub = subset(D_tall, ! Exp %in% c("Exp2"))
onevsthreesub = subset(onevsthreesub, ! condition %in% c("modifiedRW"))
fix(onevsthreesub)
summary(onevsthreesub_lme)
anova.lme(onevsthreesub_lme)
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D = D[c(1:24),]
D_tall = reshape(D, varying = 4:27, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
D_tall$measure = as.numeric(D_tall$measure)
D_tall$sex = as.factor(D_tall$sex)
D_tall$condition_order = as.factor(D_tall$condition_order)
D_tall$condition = as.factor(D_tall$condition)
D_tall = D_tall[order(D_tall$ID),]
# ADD A CONDITION NAME COLUMN
D_tall$condition_names = as.factor(rep(1:4, each = 6, times = 24))
D_tall$condition_names = revalue(x = as.factor(D_tall$condition_names),
c("1" = "BB", "2"="IS", "3" = "1C",
"4" = "2C"))
# ADD A 'PHASE' COLUMN
D_tall$phase = as.factor(rep(1:3, each = 2, times = 96))
D_tall$phase = revalue(x = as.factor(D_tall$phase),
c("1" = "Pre", "2"="Mid", "3" = "Post"))
# RENAME SEX COLUMN
D_tall$sex = revalue(x = as.factor(D_tall$sex),
c("1" = "M", "2"="F"))
# OBJECT COLUMN
D_tall$objects = as.factor(rep(1:2, times = 288))
D_tall$objects = revalue(x = as.factor(D_tall$objects),
c("1" = "A", "2"="B"))
# REORDER COLUMNS'
D_tall$condition = NULL
D_tall$row.names = NULL
D_tall = D_tall[,c(1,2,3,5,7,6,4)]
perm_func = function(s1,s2,p1,p2,o1,o2){ # s=condition name; p=phase; o=objects
set.seed(2018)                         # do NOT forget to put the arguments in quote.
b = rep(0,4000)
for(i in 1:4000){
x = sample(D_tall$measure)
dif = x[D_tall$condition_names==s1 & D_tall$phase==p1 & D_tall$objects==o1] -
x[D_tall$condition_names==s2 & D_tall$phase==p2 & D_tall$objects==o2]
b[i] = mean(dif)
}
# compute the actual difference beween BB pre and BB post
bb_diff = mean(D_tall$measure[D_tall$condition_names==s1 & D_tall$phase==p1 & D_tall$objects==o1]-
D_tall$measure[D_tall$condition_names==s2 & D_tall$phase==p2 & D_tall$objects==o2])
# 1- and 2-tailed p-values
c(bb_diff, sum(abs(b) > bb_diff)/4000, sum(abs(b) < bb_diff)/4000,
sum(b > bb_diff)/4000, sum(b < bb_diff)/4000)
}
# BOOTSTRAP FUNCTION
# Single-factor bootstrap function
global_boot = function(s,p,o){
set.seed(2018)
boot_fit = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$measure[d$condition_names==s & d$phase==p & d$objects==o],
data=D_tall)
return(dif.1)
}
boot_obj = boot(D_tall, boot_fit, R=4000)
c(boot_obj$t0, boot_obj$t0  + 1.96*-sd(boot_obj$t),
boot_obj$t0  + 1.96*sd(boot_obj$t))
}
# BOOTSTRAP FUNCTION
# Condition-difference bootstrap function
global_boot_2 = function(s1,s2,p1,p2,o1,o2){
set.seed(2018)
boot_fit = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$measure[d$condition_names==s1 & d$phase==p1 & d$objects==o1],
data=D_tall) - mean(d$measure[d$condition_names==s2 & d$phase==p2 & d$objects==o2],
data=D_tall)
return(dif.1)
}
boot_obj = boot(D_tall, boot_fit, R=4000)
c(boot_obj$t0, boot_obj$t0  + 1.96*-sd(boot_obj$t),
boot_obj$t0  + 1.96*sd(boot_obj$t))
}
fix(D_tlal)
fix(D_tall)
a = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="A" & D_tall$phase=="Pre"]
b = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="A" & D_tall$phase=="Mid"]
v = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="B" & D_tall$phase=="Pre"]
x = D_tall$measure[D_tall$condition_names=="IS" & D_tall$objects=="B" & D_tall$phase=="Mid"]
y = D_tall$measure[D_tall$condition_names=="IS" & D_tall$objects=="B" & D_tall$phase=="Post"]
ttestBF(x=a,y=b,paired=TRUE)
ttestBF(x=v,y=x,paired=TRUE)
ttestBF(x=v,y=y,paired=TRUE)
mean(v)
mean(x)
ttestBF(x=v,y=x,paired=TRUE)
ttestBF(x=v,y=y,paired=TRUE)
mean(y)
ttestBF(x=v,y=y,paired=TRUE)
a = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="A" & D_tall$phase=="Pre"]
b = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="A" & D_tall$phase=="Mid"]
v = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="B" & D_tall$phase=="Pre"]
x = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="B" & D_tall$phase=="Mid"]
y = D_tall$measure[D_tall$condition_names=="BB" & D_tall$objects=="B" & D_tall$phase=="Post"]
ttestBF(x=v,y=y,paired=TRUE)
ttestBF(x=x,y=y,paired=TRUE)
ttestBF(x=a,y=b,paired=TRUE)
ttestBF(x=a,y=b,paired=TRUE)
# b-pre vs. b-mid
ttestBF(x=v,y=x,paired=TRUE)
# b-pre vs. b-post
ttestBF(x=v,y=y,paired=TRUE)
# b-mid vs. b-post
ttestBF(x=x,y=y,paired=TRUE)
ttestBF(x=a,y=b,paired=TRUE)
# b-pre vs. b-mid
ttestBF(x=v,y=x,paired=TRUE)
# b-pre vs. b-post
ttestBF(x=v,y=y,paired=TRUE)
# b-mid vs. b-post
ttestBF(x=x,y=y,paired=TRUE)
ttestBF(x=v,y=y,paired=TRUE)
ttestBF(x=x,y=y,paired=TRUE)
# a-pre vs. a-mid
ttestBF(x=a,y=b,paired=TRUE)
# b-pre vs. b-mid
ttestBF(x=v,y=x,paired=TRUE)
# b-pre vs. b-post
ttestBF(x=v,y=y,paired=TRUE)
# b-mid vs. b-post
ttestBF(x=x,y=y,paired=TRUE)
rm(list=ls())
# load all relevant libraries:
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
options(scipen=9999)
# load data
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D = D[c(1:68),c(1:3)]
D$ID = c(1:68)
# reorder 'D' columns so 'ID' is first
D = D[,c(4,1,2,3)]
D_tall = reshape(D, varying = 3:4, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
# add 'exp' name column
D$Exp = revalue(x = as.factor(D$Exp),
c("1" = "Exp1", "2"="Exp2",
"3" = "Exp3"))
# rename 'condition' column to 'ratingType'
D_tall$condition = revalue(x = as.factor(D_tall$condition),
c("1" = "modifiedRW", "2"="Bayesian"))
# reorder 'Exp' column
D_tall = D_tall[order(D_tall$Exp),]
# remove 'row.names' column
D_tall$row.names = NULL
head(D_tall)
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp==1])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp==2])
mean(D_tall$measure[D_tall$condition=="Bayesian" & D_tall$Exp==3])
rm(llist=ls())
rm(list=ls())
# LOAD TWO CAUSE DATA #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
D = D[c(1:24),]
D_tall = reshape(D, varying = 4:27, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
D_tall$measure = as.numeric(D_tall$measure)
D_tall$sex = as.factor(D_tall$sex)
D_tall$condition_order = as.factor(D_tall$condition_order)
D_tall$condition = as.factor(D_tall$condition)
D_tall = D_tall[order(D_tall$ID),]
# ADD A CONDITION NAME COLUMN
D_tall$condition_names = as.factor(rep(1:4, each = 6, times = 24))
D_tall$condition_names = revalue(x = as.factor(D_tall$condition_names),
c("1" = "BB", "2"="IS", "3" = "1C",
"4" = "2C"))
# ADD A 'PHASE' COLUMN
D_tall$phase = as.factor(rep(1:3, each = 2, times = 96))
D_tall$phase = revalue(x = as.factor(D_tall$phase),
c("1" = "Pre", "2"="Mid", "3" = "Post"))
# RENAME SEX COLUMN
D_tall$sex = revalue(x = as.factor(D_tall$sex),
c("1" = "M", "2"="F"))
# OBJECT COLUMN
D_tall$objects = as.factor(rep(1:2, times = 288))
D_tall$objects = revalue(x = as.factor(D_tall$objects),
c("1" = "A", "2"="B"))
# REORDER COLUMNS'
D_tall$condition = NULL
D_tall$row.names = NULL
D_tall = D_tall[,c(1,2,3,5,7,6,4)]
names(D_tall)
fix(D_tall)
# ADD DIFFERENCE COLUMN BETWEEN BB-B-PRE AND BB-B-MID
D_tall$bprebmid = D_tall$
# LOAD THREE CAUSE DATA #
R = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
options(scipen=9999)
# LOAD TWO CAUSE DATA #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
dim(D)
= D[c(1:24),]
D_tall = reshape(D, varying = 4:27, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
D_tall$measure = as.numeric(D_tall$measure)
D_tall$sex = as.factor(D_tall$sex)
D_tall$condition_order = as.factor(D_tall$condition_order)
D_tall$condition = as.factor(D_tall$condition)
D_tall = D_tall[order(D_tall$ID),]
D = D[c(1:24),]
D_tall = reshape(D, varying = 4:27, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
D_tall$measure = as.numeric(D_tall$measure)
D_tall$sex = as.factor(D_tall$sex)
D_tall$condition_order = as.factor(D_tall$condition_order)
D_tall$condition = as.factor(D_tall$condition)
D_tall = D_tall[order(D_tall$ID),]
D_tall$condition_names = as.factor(rep(1:4, each = 6, times = 24))
D_tall$condition_names = revalue(x = as.factor(D_tall$condition_names),
c("1" = "BB", "2"="IS", "3" = "1C",
"4" = "2C"))
# ADD A 'PHASE' COLUMN
D_tall$phase = as.factor(rep(1:3, each = 2, times = 96))
D_tall$phase = revalue(x = as.factor(D_tall$phase),
c("1" = "Pre", "2"="Mid", "3" = "Post"))
# RENAME SEX COLUMN
D_tall$sex = revalue(x = as.factor(D_tall$sex),
c("1" = "M", "2"="F"))
# OBJECT COLUMN
D_tall$objects = as.factor(rep(1:2, times = 288))
D_tall$objects = revalue(x = as.factor(D_tall$objects),
c("1" = "A", "2"="B"))
# REORDER COLUMNS'
D_tall$condition = NULL
D_tall$row.names = NULL
D_tall = D_tall[,c(1,2,3,5,7,6,4)]
R = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
names(R)
dim(R)
R = R[c(1:24),]
R_tall = reshape(R, varying = 4:39, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
names(R_tall)
R_tall$measure = as.numeric(R_tall$measure)
R_tall$sex = as.factor(R_tall$sex)
R_tall$condition = as.factor(R_tall$condition)
R_tall$condition_order = as.factor(R_tall$condition_order)
R_tall = R_tall[order(R_tall$ID),]
names(R_tall)
R_tall$condition_names = as.factor(rep(1:4, each = 9, times = 24))
R_tall$condition_names = revalue(x = as.factor(R_tall$condition_names),
c("1" = "BB", "2"="IS", "3" = "1C",
"4" = "2C"))
names(R_tall)
R_tall$phase = as.factor(rep(1:3, each = 3, times = 96))
R_tall$phase = revalue(x = as.factor(R_tall$phase),
c("1" = "Pre", "2"="Mid", "3" = "Post"))
# RENAME SEX COLUMN
R_tall$sex = revalue(x = as.factor(R_tall$sex),
c("1" = "M", "2"="F"))
# OBJECT COLUMN
R_tall$objects = as.factor(rep(1:3, times = 288))
R_tall$objects = revalue(x = as.factor(R_tall$objects),
c("1" = "A", "2"="B", "3"="C"))
R_tall$condition = NULL
R_tall$row.names = NULL
R_tall$condition_order = NULL
names(R_tall)
R_tall = R_tall[,c(1,2,4,5,6,3)]
fix(R_tall)
names(R_tall)
V = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
V = V[c(1:20),]
dim(v)
fix(v)
fix(V)
names(V)
V_tall = reshape(V, varying = 4:51, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
V_tall$measure = as.numeric(V_tall$measure)
V_tall$sex = as.factor(V_tall$sex)
V_tall$condition = as.factor(V_tall$condition)
V_tall = V_tall[order(V_tall$ID),]
V_tall$condition_names = as.factor(rep(1:4, each = 12, times = 20))
V_tall$condition_names = revalue(x = as.factor(V_tall$condition_names),
c("1" = "BB", "2"="IS", "3" = "1C",
"4" = "2C"))
# ADD A CONDITION ORDER COLUMN
V_tall$condition_order = revalue(x = as.factor(V_tall$condition),
c("1" = "1234", "2"="2413", "3"="3142", "4"="4321"))
# ADD A 'PHASE' COLUMN
V_tall$phase = as.factor(rep(1:3, each = 4, times = 80))
V_tall$phase = revalue(x = as.factor(V_tall$phase),
c("1" = "Pre", "2"="Mid", "3" = "Post"))
# RENAME SEX COLUMN
V_tall$sex = revalue(x = as.factor(V_tall$sex),
c("1" = "M", "2"="F"))
# OBJECT COLUMN
V_tall$objects = as.factor(rep(1:4, times = 240))
V_tall$objects = revalue(x = as.factor(V_tall$objects),
c("1" = "A", "2"="B", "3"="C", "4"="D"))
names(V_tall)
V_tall$condition = NULL
V_tall$row.names = NULL
names(V_tall)
names(R_tall)
V_tall = V_tall[,c(1,4,6,7,3)]
names(R_tall)
names(V_tall)
mean(D_tall$measure[D_tall$condition_names==BB & D_tall$phase=="Pre" & D_tall$objects==B])
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects==B])
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects=="B"])
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Mid" & D_tall$objects=="B"])
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects=="B"])-
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Mid" & D_tall$objects=="B"])
mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Pre" & R_tall$objects=="B"])-
mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Mid" & R_tall$objects=="B"])
mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Pre" & V_tall$objects=="B"])-
mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Mid" & V_tall$objects=="B"])
BBpremidExp1 = mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects=="B"])-
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Mid" & D_tall$objects=="B"])
BBpremidExp1 = mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Pre" & R_tall$objects=="B"])-
mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Mid" & R_tall$objects=="B"])
BBpremidExp3 = mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Pre" & V_tall$objects=="B"])-
mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Mid" & V_tall$objects=="B"])
BBbpremidExp1 = mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects=="B"])-
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Mid" & D_tall$objects=="B"])
BBbpremidExp1 = mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Pre" & R_tall$objects=="B"])-
mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Mid" & R_tall$objects=="B"])
BBbpremidExp3 = mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Pre" & V_tall$objects=="B"])-
mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Mid" & V_tall$objects=="B"])
BBbpremidExp1 = mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects=="B"])-
mean(D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Mid" & D_tall$objects=="B"])
BBbpremidExp2 = mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Pre" & R_tall$objects=="B"])-
mean(R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Mid" & R_tall$objects=="B"])
BBbpremidExp3 = mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Pre" & V_tall$objects=="B"])-
mean(V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Mid" & V_tall$objects=="B"])
ttestBF(x=BBbpremidExp1,y=BBbpremidExp2,paired=FALSE)
BBbpremidExp1 = D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Pre" & D_tall$objects=="B"]-
D_tall$measure[D_tall$condition_names=="BB" & D_tall$phase=="Mid" & D_tall$objects=="B"]
BBbpremidExp2 = R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Pre" & R_tall$objects=="B"]-
R_tall$measure[R_tall$condition_names=="BB" & R_tall$phase=="Mid" & R_tall$objects=="B"]
BBbpremidExp3 = V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Pre" & V_tall$objects=="B"]-
V_tall$measure[V_tall$condition_names=="BB" & V_tall$phase=="Mid" & V_tall$objects=="B"]
# exp1 vs exp2
ttestBF(x=BBbpremidExp1,y=BBbpremidExp2,paired=FALSE)
# exp1 vs exp2
ttestBF(x=BBbpremidExp1,y=BBbpremidExp3,paired=FALSE)
