rm(list=ls())
install.packages('lme4')
install.packages('nlme')
install.packages('boot')
install.packages('car')
install.packages('reshape2')
install.packages('ggplot2')
intall.packages('ez')
install.packages('ez')
install.packages('plyr')
install.packages('ggsignif')
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(ez)
options(scipen=9999)
## INITIAL SET UP ##
# import "2_cause_CSV.csv"
D = read.csv(file.choose(), header = TRUE)
dim(D)
names(D)
D$X = NULL
# convert data from "wide" to "tall" format
D_tall = reshape(D, varying = 3:18, v.names = "measure", timevar = "condition", idvar = "ID", new.row.names = 1:960, direction = "long")
fix(D)
fix(D_tall)
names(D_tall)
fix(D_tall)
D_tall = D_tall[order(D_tall$ID),]
fix(D_tall)
install.packages("pgirmess")
library(pgirmess)
subApreApostIS = subset(D_tall, ! condition %in% c(1:3,5:7,9:16))
subApreApostIS$condition = factor(subD11$condition)
subApreApostIS$condition = factor(subApreApostIS$condition)
# get names
names(D_tall)
fix(D)
fix(D)
fix(D)
rm(list=ls())
install.packages(c("lsr", "sjmisc", "sjstats"))
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
D = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
fix(D)
dim(D)
names(D)
fix(D)
D = D[c(1:24),]
D_tall = reshape(D, varying = 4:27, v.names = "measure", timevar = "condition",
idvar = "ID",
direction = "long")
str(D)
D_tall$measure = as.numeric(D_tall$measure)
D_tall$sex = as.factor(D_tall$sex)
D_tall$condition_order = as.factor(D_tall$condition_order)
D_tall$condition = as.factor(D_tall$condition)
D_tall = D_tall[order(D_tall$ID),]
D_tall$condition_names = as.factor(rep(1:4, each = 6, times = 24))
D_tall$condition_names = revalue(x = as.factor(D_tall$condition_names),
c("1" = "BB", "2"="IS", "3" = "1C",
"4" = "2C"))
fix(D_tall)
D_tall = D_tall[order(D_tall$ID),]
D_tall$phase = as.factor(rep(1:3, each = 2, times = 96))
D_tall$phase = revalue(x = as.factor(D_tall$phase),
c("1" = "Pre", "2"="Mid", "3" = "Post"))
fix(D)
D_tall$sex = revalue(x = as.factor(D_tall$sex),
c("1" = "M", "2"="F"))
# OBJECT COLUMN
D_tall$objects = as.factor(rep(1:2, times = 288))
D_tall$objects = revalue(x = as.factor(D_tall$objects),
c("1" = "A", "2"="B"))
names(D_tall0
names(D_tall)
fix(D_tall)
D_tall$condition = NULL
D_tall$row.names = NULL
dim(D_tall)
D_tall = D_tall[,c(1,2,3,5,7,6,4)]
fix(D_tall)
perm_func = function(s1,s2,p1,p2,o1,o2){ # s=condition name; p=phase; o=objects
set.seed(2018)                         # do NOT forget to put the arguments in quote.
b = rep(0,4000)
for(i in 1:4000){
x = sample(D_tall$measure)
dif = x[D_tall$condition_names==s1 & D_tall$phase==p1 & D_tall$objects==o1] -
x[D_tall$condition_names==s2 & D_tall$phase==p2 & D_tall$objects==o2]
b[i] = mean(dif)
}
# compute the actual difference beween BB pre and BB post
bb_diff = mean(D_tall$measure[D_tall$condition_names==s1 & D_tall$phase==p1 & D_tall$objects==o1]-
D_tall$measure[D_tall$condition_names==s2 & D_tall$phase==p2 & D_tall$objects==o2])
# 1- and 2-tailed p-values
c(bb_diff, sum(abs(b) > bb_diff)/4000, sum(abs(b) < bb_diff)/4000,
sum(b > bb_diff)/4000, sum(b < bb_diff)/4000)
}
# BOOTSTRAP FUNCTION
# Single-factor bootstrap function
global_boot = function(s,p,o){
set.seed(2018)
boot_fit = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$measure[d$condition_names==s & d$phase==p & d$objects==o],
data=D_tall)
return(dif.1)
}
boot_obj = boot(D_tall, boot_fit, R=4000)
c(boot_obj$t0, boot_obj$t0  + 1.96*-sd(boot_obj$t),
boot_obj$t0  + 1.96*sd(boot_obj$t))
}
# BOOTSTRAP FUNCTION
# Condition-difference bootstrap function
global_boot_2 = function(s1,s2,p1,p2,o1,o2){
set.seed(2018)
boot_fit = function(data,b,formula){
d= data[b,]
dif.1 =  mean(d$measure[d$condition_names==s1 & d$phase==p1 & d$objects==o1],
data=D_tall) - mean(d$measure[d$condition_names==s2 & d$phase==p2 & d$objects==o2],
data=D_tall)
return(dif.1)
}
boot_obj = boot(D_tall, boot_fit, R=4000)
c(boot_obj$t0, boot_obj$t0  + 1.96*-sd(boot_obj$t),
boot_obj$t0  + 1.96*sd(boot_obj$t))
}
